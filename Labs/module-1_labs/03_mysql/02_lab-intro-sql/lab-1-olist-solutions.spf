<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>olist</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-5223889814007082613</string>
			<key>name</key>
			<string>127.0.0.1</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGoCwwXGBkaHiVVJG51bGzTDQ4PEBMWV05TLmtleXNaTlMu
			b2JqZWN0c1YkY2xhc3OiERKAAoADohQVgASABYAHVHR5cGVUcm93
			c18QHVNlbGVjdGlvbkRldGFpbFR5cGVOU0luZGV4U2V00hsPHB1c
			TlNSYW5nZUNvdW50EACABtIfICEiWiRjbGFzc25hbWVYJGNsYXNz
			ZXNaTlNJbmRleFNldKIjJFpOU0luZGV4U2V0WE5TT2JqZWN00h8g
			JidcTlNEaWN0aW9uYXJ5oiYkAAgAEQAaACQAKQAyADcASQBMAFEA
			UwBcAGIAaQBxAHwAgwCGAIgAigCNAI8AkQCTAJgAnQC9AMIAzwDR
			ANMA2ADjAOwA9wD6AQUBDgETASAAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {695, 481}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>#1. From the order_items table, find the price of the highest priced order item and lowest price order item.
SELECT MIN(price)  AS min_price, MAX(price) AS max_price
FROM olist.order_items;

#2. From the order_items table, what is range of the shipping_limit_date of the orders?
SELECT MIN(shipping_limit_date)  AS min_shipping_date, MAX(shipping_limit_date) AS max_shipping_date
FROM olist.order_items;

#3. From the customers table, find the 3 states with the greatest number of customers.
SELECT customer_state, COUNT(customer_state) as num_cust_state
FROM olist.customers
GROUP BY customer_state
ORDER BY num_cust_state DESC
LIMIT 3;

#4. From the customers table, within the state with the greatest number of customers, find the 3 cities with the greatest number of customers.
SELECT customer_state, customer_city, COUNT(customer_city)
FROM olist.customers
WHERE customer_state = 'SP'
GROUP BY customer_state, customer_city
ORDER BY COUNT(customer_city) DESC
LIMIT 3;

#5. From the closed_deals table, how many distinct business segments are there (not including null)?
SELECT COUNT(DISTINCT business_segment) AS unique_business_segment
FROM olist.closed_deals;

#6. From the closed_deals table, sum the declared_monthly_revenue for duplicate row values in business_segment and find the 3 business segments with the highest declared monthly revenue (of those that declared revenue).
SELECT business_segment, SUM(declared_monthly_revenue) AS total_declared_monthly_revenue
FROM olist.closed_deals
GROUP BY business_segment
ORDER BY total_declared_monthly_revenue DESC
LIMIT 3;

#7. From the order_reviews table, find the total number of distinct review score values.
SELECT COUNT(DISTINCT review_score) AS unique_review_score
FROM olist.order_reviews;

#8. In the order_reviews table, create a new column with a description that corresponds to each number category for each review score from 1 - 5.


#9. From the order_reviews table, find the review score occurring most frequently and how many times it occurs.
SELECT COUNT(review_id), review_score
FROM olist.order_reviews
GROUP BY review_score
ORDER BY COUNT(review_id) DESC
LIMIT 1;</string>
			<key>table</key>
			<string>geolocation</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>SELECT business_segment, SUM(declared_monthly_revenue) AS total_declared_monthly_revenue
FROM olist.closed_deals
GROUP BY business_segment
ORDER BY total_declared_monthly_revenue DESC
LIMIT 3</string>
		<string>SELECT COUNT(DISTINCT review_score) AS unique_review_score
FROM olist.order_reviews</string>
		<string>SELECT business_segment,
SUM(declared_monthly_revenue) AS total_declared_monthly_revenue
FROM olist.closed_deals
GROUP BY business_segment
ORDER BY total_declared_monthly_revenue DESC
LIMIT 3</string>
		<string>SELECT business_segment,
   SUM(declared_monthly_revenue) AS total_declared_monthly_revenue
FROM olist.closed_deals
GROUP BY business_segment
ORDER BY total_declared_monthly_revenue DESC
LIMIT 3</string>
		<string>SELECT COUNT(review_id), review_score
FROM olist.order_reviews
GROUP BY review_score
ORDER BY COUNT(review_id) DESC
LIMIT 1</string>
		<string>SELECT
       review_score,
    IF(review_score = 1, 'very dissatisfied',
    IF(review_score = 2, 'moderately dissatisfied',
    IF(review_score = 3, 'neutral',
    IF(review_score = 4, 'moderately satisfied',
    IF(review_score = 5, 'very satisfied','undefined'))))) AS review_category
FROM olist.order_reviews;
SELECT
	review_score,
	CASE
		WHEN review_score = 1 THEN 'very dissatisfied'
        WHEN review_score = 2 THEN 'moderately dissatisfied'
        WHEN review_score = 3 THEN 'neutral'
        WHEN review_score = 4 THEN 'moderately satisfied'
        WHEN review_score = 5 THEN 'very satisfied'
        ELSE 'undefined'
	END 										AS review_category
FROM olist.order_reviews</string>
		<string>SELECT
       review_score,
    IF(review_score = 1, 'very dissatisfied',
    IF(review_score = 2, 'moderately dissatisfied',
    IF(review_score = 3, 'neutral',
    IF(review_score = 4, 'moderately satisfied',
    IF(review_score = 5, 'very satisfied','undefined'))))) AS review_category
FROM olist.order_reviews</string>
		<string>SELECT
    MIN(first_contact_date),
    MAX(first_contact_date)
FROM olist.marketing_qualified_leads</string>
		<string>MIN(first_contact_date),
    MAX(first_contact_date)
FROM olist.marketing_qualified_leads</string>
		<string>SELECT
    customer_state,
    customer_city, COUNT(customer_city)
FROM olist.customers
WHERE customer_state = 'SP'
GROUP BY customer_state,
         customer_city
ORDER BY COUNT(customer_city) DESC
LIMIT 3</string>
		<string>SELECT
    customer_state, COUNT(customer_state) as num_cust_state
FROM olist.customers
GROUP BY customer_state
ORDER BY num_cust_state DESC
LIMIT 3</string>
		<string>SELECT
    MIN(shipping_limit_date)  AS min_shipping_date,
    MAX(shipping_limit_date) AS max_shipping_date
FROM olist.order_items</string>
		<string>SELECT
    MIN(price)  AS min_price,
    MAX(price) AS max_price
FROM olist.order_items</string>
		<string>SELECT *
FROM olist.orders
LIMIT 10</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.21</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
